- name: "SCORED | 3.1.1 | PATCH | Ensure IP forwarding is disabled"
  sysctl:
      name: net.ipv4.ip_forward
      value: '0'
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  when:
      - not rhel8cis_is_router
      - rhel8cis_rule_3_1_1|bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.1.1

- name: "SCORED | 3.1.2 | PATCH | Ensure packet redirect sending is disabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.send_redirects, value: 0 }
      - { name: net.ipv4.conf.default.send_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - not rhel8cis_is_router
      - rhel8cis_rule_3_1_2|bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.1.2

- name: "SCORED | 3.2.1 | PATCH | Ensure source routed packets are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.accept_source_route, value: 0 }
      - { name: net.ipv4.conf.default.accept_source_route, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel8cis_rule_3_2_1|bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.1

- name: "SCORED | 3.2.2 | PATCH | Ensure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.accept_redirects, value: 0 }
      - { name: net.ipv4.conf.default.accept_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel8cis_rule_3_2_2|bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.2

- name: "SCORED | 3.2.3 | PATCH | Ensure secure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.secure_redirects, value: 0 }
      - { name: net.ipv4.conf.default.secure_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel8cis_rule_3_2_3|bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.3

- name: "SCORED | 3.2.4 | PATCH | Ensure suspicious packets are logged"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.log_martians, value: 1 }
      - { name: net.ipv4.conf.default.log_martians, value: 1 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel8cis_rule_3_2_4|bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.4

- name: "SCORED | 3.2.5 | PATCH | Ensure broadcast ICMP requests are ignored"
  sysctl:
      name: net.ipv4.icmp_echo_ignore_broadcasts
      value: '1'
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel8cis_rule_3_2_5|bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.5

- name: "SCORED | 3.2.6 | PATCH | Ensure bogus ICMP responses are ignored"
  sysctl:
      name: net.ipv4.icmp_ignore_bogus_error_responses
      value: '1'
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel8cis_rule_3_2_6|bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.6

- name: "SCORED | 3.2.7 | PATCH | Ensure Reverse Path Filtering is enabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.rp_filter, value: 1 }
      - { name: net.ipv4.conf.default.rp_filter, value: 1 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel8cis_rule_3_2_7|bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.7

- name: "SCORED | 3.2.8 | PATCH | Ensure TCP SYN Cookies is enabled"
  sysctl:
      name: net.ipv4.tcp_syncookies
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel8cis_rule_3_2_8|bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.8

- name: "SCORED | 3.2.9 | PATCH | Ensure IPv6 router advertisements are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv6.conf.all.accept_ra, value: 0 }
      - { name: net.ipv6.conf.default.accept_ra, value: 0 }
  notify:
      - sysctl flush ipv6 route table
  when:
      - rhel8cis_ipv6_required | bool
      - rhel8cis_rule_3_2_9|bool
  tags:
      - level1
      - sysctl
      - patch
      - rule_3.2.9

- name: "NOTSCORED | 3.3.1 | PATCH | Ensure DCCP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install dccp(\\s|$)"
      line: "install dccp /bin/true"
      create: yes
  when:
      - rhel8cis_rule_3_3_1|bool
  tags:
      - level1
      - patch
      - rule_3.3.1

- name: "NOTSCORED | 3.3.2 | PATCH | Ensure SCTP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install sctp(\\s|$)"
      line: "install sctp /bin/true"
      create: yes
  when:
      - rhel8cis_rule_3_3_2|bool
  tags:
      - level1
      - patch
      - rule_3.3.2

- name: "NOTSCORED | 3.3.3 | PATCH | Ensure RDS is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install rds(\\s|$)"
      line: "install rds /bin/true"
      create: yes
  when:
      - rhel8cis_rule_3_3_3|bool
  tags:
      - level1
      - patch
      - rule_3.3.3

- name: "NOTSCORED | 3.3.4 | PATCH | Ensure TIPC is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install tipc(\\s|$)"
      line: "install tipc /bin/true"
      create: yes
  when:
      - rhel8cis_rule_3_3_4|bool
  tags:
      - level1
      - patch
      - rule_3.3.4

- name: "SCORED | 3.4.1.1 | PATCH | Ensure a Firewall package is installed"
  package:
      name: firewalld
      state: present
  when: rhel8cis_firewall == "firewalld"
  tags:
      - level1
      - patch
      - rule_3.4.1.1

- name: "SCORED | 3.4.2.1 | PATCH | Ensure firewalld service is enabled and running"
  service:
      name: firewalld
      state: started
      enabled: yes
  when: rhel8cis_firewall == "firewalld"
  tags:
      - level1
      - patch
      - rule_3.4.2.1

- name: "SCORED | 3.4.2.2 | PATCH | Ensure iptables is not enabled"
  service:
      name: iptables
      state: stopped
      enabled: no
  ignore_errors: yes
  when:
      - rhel8cis_firewall == "firewalld"
      - rhel8cis_rule_3_4_2_2|bool
  tags:
      - level1
      - patch
      - rule_3.4.2.2

- name: "SCORED | 3.4.2.3 | PATCH | Ensure nftables is not enabled"
  service:
      name: nftables
      state: stopped
      enabled: no
  when:
      - rhel8cis_firewall == "firewalld"
      - rhel8cis_rule_3_4_2_3|bool
  tags:
      - level1
      - patch
      - rule_3.4.2.3

- name: "SCORED | 3.4.4.1.4 | PATCH | Ensure firewall rules exist for all open ports"
  firewalld:
      service: "{{ item }}"
      state: enabled
      zone: dmz
      permanent: true
      immediate: true
  notify: restart firewalld
  with_items: "{{ rhel8cis_firewall_services }}"
  when:
      - rhel8cis_firewall == "firewalld"
      - rhel8cis_rule_3_4_4_1_4|bool
      - ansible_connection != 'docker'
  tags:
      - level1
      - patch
      - rule_3.4.4.1.4

- name: "SCORED | 3.4.2.4 | PATCH | Ensure default zone is set"
  command: firewall-cmd --set-default-zone=drop
  changed_when: no
  when:
      - rhel8cis_rule_3_4_2_4|bool
  tags:
      - level1
      - patch
      - rule_3.4.2.4

- name: "SCORED | 3.4.2.5 | PATCH | Ensure network interfaces are assigned to appropriate zone"
  command: firewall-cmd --zone=dmz --change-interface=eth0 --permanent
  changed_when: no
  when:
      - rhel8cis_rule_3_4_2_5|bool
  tags:
      - level1
      - patch
      - rule_3.4.2.5

#- name: "SCORED | 3.4.2.6 | PATCH | Ensure unnecessary services and ports are not accepted"
#  shell: |
#    - firewall-cmd --remove-service=cockpit
#    - firewall-cmd --remove-port=25/tcp
#  when:
#      - rhel8cis_rule_3_4_2_6|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.2.6

#- name: "SCORED | 3.4.3.1 | PATCH | Ensure iptables are flushed"
#  shell: |
#    - iptables -F
#    - ip6tables -F
#  when:
#      - rhel8cis_rule_3_4_3_1|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.3.1

#- name: "SCORED | 3.4.3.2 | PATCH | Ensure a table exists"
#  command: nft create table inet filter
#  when:
#      - rhel8cis_rule_3_4_3_2|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.3.2

#- name: "SCORED | 3.4.3.3 | PATCH | Ensure base chains exist"
#  shell: | 
#    - nft create chain inet filter input { type filter hook input priority 0 \; }
#    - nft create chain inet filter forward { type filter hook forward priority 0 \; }
#    - nft create chain inet filter output { type filter hook output priority 0 \; }
#  when:
#      - rhel8cis_rule_3_4_3_3|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.3.3

#- name: "SCORED | 3.4.3.4 | PATCH | Ensure loopback traffic is configured"
#  shell: |
#    - nft add rule inet filter input iif lo accept
#    - nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop
#    - nft add rule inet filter input ip6 saddr ::1 counter drop
#  when:
#      - rhel8cis_firewall == "iptables"
#      - rhel8cis_rule_3_4_3_4|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.3.4

#- name: "SCORED | 3.4.3.5 | PATCH | Ensure outbound and established connections are configured"
#  shell: |
#    - nft add rule inet filter input ip protocol tcp ct state established accept
#    - nft add rule inet filter input ip protocol udp ct state established accept
#    - nft add rule inet filter input ip protocol icmp ct state established accept
#    - nft add rule inet filter output ip protocol tcp ct state new,related,established accept
#    - nft add rule inet filter output ip protocol udp ct state new,related,established accept
#    - nft add rule inet filter output ip protocol icmp ct state new,related,established accept
#  when:
#      - rhel8cis_rule_3_4_3_5|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.3.5

#- name: "SCORED | 3.4.3.6 | PATCH | Ensure default deny firewall policy"
#  shell: |
#    - nft chain inet filter input { policy drop \; }
#    - nft chain inet filter forward { policy drop \; }
#    - nft chain inet filter output { policy drop \; }
#  when:
#      - rhel8cis_rule_3_4_3_6|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.3.6

#- name: "SCORED | 3.4.3.7 | PATCH | Ensure nftables service is enabled"
#  service:
#      name: nftables
#      state: started
#      enabled: yes
#  when:
#      - rhel8cis_rule_3_4_3_7|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.3.7

#- name: "SCORED | 3.4.3.8 | PATCH | Ensure nftables rules are permanent"
#  lineinfile:
#      dest: /etc/sysconfig/nftables.conf
#      regexp: "^include"
#      line: "include /etc/nftables/nftables.rules"
#      create: yes
#  when:
#      - rhel8cis_rule_3_4_3_8|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.3.8

- name: "SCORED | 3.6.1.1 | PATCH | Ensure iptables package is installed"
  package:
      name: iptables-services
      state: present
  when: rhel8cis_firewall == "iptables"
  tags:
      - level1
      - patch
      - rule_3.6.1.1

- name: "SCORED | 3.6.1.3 | PATCH | Ensure firewalld is not enabled"
  service:
      name: firewalld
      state: stopped
      enabled: no
  ignore_errors: yes
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_2_2|bool
  tags:
      - level1
      - patch
      - rule_3.4.2.2

- name: "SCORED | 3.6.1.4 | PATCH | Ensure nftables is not enabled"
  service:
      name: nftables
      state: stopped
      enabled: no
  when:
      - rhel8cis_firewall == "iptables"
      - rhel8cis_rule_3_4_2_3|bool
  ignore_errors: yes
  tags:
      - level1
      - patch
      - rule_3.4.2.3

- name: "SCORED | 3.6.2.1 | Copy iptable rules"
  copy:
      src: etc/sysconfig/iptables
      dest: /etc/sysconfig/iptables
      owner: root
      group: root
      mode: 0600
  when:
      - rhel8cis_firewall == "iptables"

- name: "SCORED | 3.6.2.2 | Load iptable rules"
  shell: iptables-restore /etc/sysconfig/iptables
  when:
      - rhel8cis_firewall == "iptables"

- name: "SCORED | 3.6.2.2 | PATCH | Ensure iptables service is enabled and running"
  service:
      name: iptables
      state: started
      enabled: yes
  when: rhel8cis_firewall == "iptables"

- name: "SCORED | 3.4.4.1 | Copy ip6table rules"
  copy:
      src: etc/sysconfig/ip6tables
      dest: /etc/sysconfig/ip6tables
      owner: root
      group: root
      mode: 0600
  when:
      - rhel8cis_firewall == "iptables"

- name: "SCORED | 3.4.4.1 | Load ip6table rules"
  shell: ip6tables-restore /etc/sysconfig/ip6tables
  when:
      - rhel8cis_firewall == "iptables"

- name: "SCORED | 3.4.4.1 | PATCH | Ensure ip6tables service is enabled and running"
  service:
      name: ip6tables
      state: started
      enabled: yes
  when: rhel8cis_firewall == "iptables"

#- name: "SCORED | 3.4.4.1.1 | PATCH | Ensure default deny firewall policy"
#  shell: |
#    iptables -P INPUT DROP
#    iptables -P OUTPUT DROP
#    iptables -P FORWARD DROP
#  when:
#      - rhel8cis_firewall == "iptables"
#      - rhel8cis_rule_3_4_4_1_1|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.4.1.1
#
#- name: "SCORED | 3.4.4.1.2 | PATCH | Ensure loopback traffic is configured"
#  shell: |
#    iptables -A INPUT -i lo -j ACCEPT
#    iptables -A OUTPUT -o lo -j ACCEPT
#    iptables -A INPUT -s 127.0.0.0/8 -j DROP
#  when:
#      - rhel8cis_firewall == "iptables"
#      - rhel8cis_rule_3_4_4_1_2|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.4.1.2
#
#- name: "SCORED | 3.4.4.1.3 | PATCH | Ensure outbound and established connections are configured"
#  command: iptables -L -v -n
#  when:
#      - rhel8cis_firewall == "iptables"
#      - rhel8cis_rule_3_4_4_1_3|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.4.1.3

#- name: "SCORED | 3.4.4.1.4 | PATCH | Ensure firewall rules exist for all open ports"
#  shell: |
#    ss -4tuln
#    iptables -L INPUT -v -n
#  changed_when: no
#  when:
#      - rhel8cis_firewall == "iptables"
#      - rhel8cis_rule_3_4_4_1_4|bool
#  tags:
#      - level1
#      - patch
#      - rule_3.4.4.1.4
#      - notimplemented

- name: "NOTSCORED | 3.5 | PATCH | Ensure wireless interfaces are disabled"
  command: nmcli radio all off
  tags:
      - level1
      - level2
      - patch
      - rule_3.5

- name: "NOTSCORED | 3.6 | PATCH | Disable IPv6"
  lineinfile:
      dest: /etc/default/grub
      regexp: "^GRUB_CMDLINE_LINUX"
      line: 'GRUB_CMDLINE_LINUX="audit=1 audit_backlog_limit=8192 ipv6.disable=1"'
      create: yes
  notify: grub2cfg
  when:
      - rhel8cis_rule_3_6|bool
  tags:
      - level2
      - patch
      - rule_3.6

#- name: "NOTSCORED | 3.6 | PATCH | Disable IPv6"
#  shell: grub2-mkconfig > /boot/grub2/grub.cfg
#  when:
#      - rhel8cis_rule_3_6|bool
#  tags:
#      - level2
#      - patch
#      - rule_3.6

- name: "SCORED | 3.4.2 | PATCH | Ensure /etc/hosts.allow is configured"
  template:
      src: hosts.allow.j2
      dest: /etc/hosts.allow
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - patch
      - rule_3.4.2

- name: "SCORED | 3.4.3.1 | PATCH | Permit ALL /etc/hosts.allow before configuring /etc/hosts.deny"
  lineinfile:
    dest: /etc/hosts.allow
    regexp: "^ALL(.*)"
    line: "ALL: ALL"
  tags:
      - level1
      - patch
      - rule_3.4.3

- name: "SCORED | 3.4.3.2 | PATCH | Ensure /etc/hosts.allow is configured"
  template:
      src: hosts.deny.j2
      dest: /etc/hosts.deny
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - patch
      - rule_3.4.3

- name: "SCORED | 3.4.3.3 | PATCH | Ensure /etc/hosts.deny is configured"
  lineinfile:
      dest: /etc/hosts.deny
      regexp: "^(#)?ALL"
      line: "ALL: ALL"
  tags:
      - level1
      - patch
      - rule_3.4.3

- name: "SCORED | 3.4.4 | PATCH | Ensure permissions on /etc/hosts.allow are configured"
  file:
      dest: /etc/hosts.allow
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - patch
      - rule_3.4.4

- name: "SCORED | 3.4.5 | PATCH | Ensure permissions on /etc/hosts.deny are 644"
  file:
      dest: /etc/hosts.deny
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - patch
      - rule_3.4.5
